name: Cross‚Äëplatform Build + Release ‚Äî Shotgun Code

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ BUILD ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Linux ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          - os: ubuntu-latest
            platform: linux/amd64
            wails_build_param_name: shotgun-code-linux-amd64 # –î–ª—è -o –≤ Wails
            package_wails_action: false
            final_artifact_filename_on_runner: shotgun-code-linux-amd64
            upload_artifact_as_name: shotgun_code-linux-amd64

          # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Windows ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          - os: windows-latest
            platform: windows/amd64
            wails_build_param_name: shotgun-code-windows-amd64.exe # –î–ª—è -o –≤ Wails
            package_wails_action: false
            final_artifact_filename_on_runner: shotgun-code-windows-amd64.exe
            upload_artifact_as_name: shotgun_code-windows-amd64

          # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ macOS arm64 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          - os: macos-latest
            platform: darwin/arm64
            wails_build_param_name: shotgun-code # –ò–º—è .app –±–∞–Ω–¥–ª–∞ –∏ –¥–ª—è -o
            package_wails_action: true
            # wails-build-action —Å–æ–∑–¥–∞—Å—Ç shotgun-code.app.zip
            # –ú—ã –µ–≥–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–µ–º –≤ final_artifact_filename_on_runner
            final_artifact_filename_on_runner: shotgun-code-darwin-arm64.app.zip
            upload_artifact_as_name: shotgun_code-darwin-arm64

          # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ macOS amd64 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          - os: macos-latest
            platform: darwin/amd64
            wails_build_param_name: shotgun-code # –ò–º—è .app –±–∞–Ω–¥–ª–∞ –∏ –¥–ª—è -o
            package_wails_action: true
            # wails-build-action —Å–æ–∑–¥–∞—Å—Ç shotgun-code.app.zip
            # –ú—ã –µ–≥–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–µ–º –≤ final_artifact_filename_on_runner
            final_artifact_filename_on_runner: shotgun-code-darwin-amd64.app.zip
            upload_artifact_as_name: shotgun_code-darwin-amd64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          submodules: recursive

      - name: Build Wails app (${{ matrix.platform }})
        uses: dAppServer/wails-build-action@main
        with:
          build-name:     ${{ matrix.wails_build_param_name }}
          build-platform: ${{ matrix.platform }}
          go-version:     '1.24' # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è, –≤ –ª–æ–≥–∞—Ö –±—ã–ª–æ 1.24.3
          package:        ${{ matrix.package_wails_action }}

      - name: Prepare artifact path and rename if macOS
        id: prepare_artifact_path
        run: |
          if [[ "${{ matrix.package_wails_action }}" == "true" && "${{ runner.os }}" == "macOS" ]]; then
            # wails-build-action —Å–æ–∑–¥–∞–µ—Ç zip –Ω–∞ –æ—Å–Ω–æ–≤–µ 'build-name', —Ç.–µ. ${{ matrix.wails_build_param_name }}.app.zip
            SOURCE_ZIP_PATH="build/bin/${{ matrix.wails_build_param_name }}.app.zip"
            DEST_FULL_PATH="build/bin/${{ matrix.final_artifact_filename_on_runner }}"
            echo "Attempting to rename '$SOURCE_ZIP_PATH' to '$DEST_FULL_PATH'"
            if [[ -f "$SOURCE_ZIP_PATH" ]]; then
              mv "$SOURCE_ZIP_PATH" "$DEST_FULL_PATH"
              echo "Successfully renamed to '$DEST_FULL_PATH'"
              echo "artifact_upload_path=$DEST_FULL_PATH" >> $GITHUB_OUTPUT
            else
              echo "Error: Source ZIP file '$SOURCE_ZIP_PATH' not found!"
              exit 1
            fi
          else
            # –î–ª—è Linux/Windows, –ø—É—Ç—å —ç—Ç–æ build/bin/–∏–º—è_—Ñ–∞–π–ª–∞
            FINAL_PATH="build/bin/${{ matrix.final_artifact_filename_on_runner }}"
            echo "artifact_upload_path=$FINAL_PATH" >> $GITHUB_OUTPUT
            echo "Path for non-macOS or non-package: $FINAL_PATH"
          fi
        shell: bash

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.upload_artifact_as_name }}
          path: ${{ steps.prepare_artifact_path.outputs.artifact_upload_path }}
          if-no-files-found: error

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ RELEASE ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: shotgun_code-*
          path: release-assets
          fail_on_no_artifact: true # –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ

      - name: List downloaded files # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        run: ls -R release-assets

      - name: Prepare tag & release metadata
        id: prep
        run: |
          TAG="v$(date -u '+%Y.%m.%d')-${GITHUB_SHA::7}"
          echo "tag_name=$TAG"            >> $GITHUB_OUTPUT
          echo "release_name=Shotgun Code $TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name:  ${{ steps.prep.outputs.tag_name }}
          name:      ${{ steps.prep.outputs.release_name }}
          body: |
            üî® Automatic packaging –æ—Ç commit ${{ github.sha }}
            Packages:
            ‚Ä¢ Linux (amd64)
            ‚Ä¢ Windows (amd64)
            ‚Ä¢ macOS (Apple Silicon)
            ‚Ä¢ macOS (Intel)
            Created with GitHub Actions.
          draft: false
          prerelease: false
          files: release-assets/**/* # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤ –≤ release-assets —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —ç—Ç–æ–º—É –ø–∞—Ç—Ç–µ—Ä–Ω—É
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
